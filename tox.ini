[tox]
requires =
    tox>=4.2
env_list =
    python3-test
    pre-commit
    mypy
    pkg
labels =
    lint = pre-commit, mypy, pkg
    pin = deps, pre-commit-update

[testenv]
description = Run Tests
package = wheel
deps =
    -rconstraints.txt
    test: coverage~=7.3.1
    test: pytest~=7.4.2
    test: pytest-icdiff~=0.7
pass_env =
    CI
    HOME
    JUNIT_*
    PYTEST_*
    TERM
    XDG_*
commands =
    test: coverage run -m pytest {posargs}

[testenv:mypy{,-helloworld}]
description = Static Analysis
skip_install = false
deps =
    !helloworld: {[testenv]deps}
    mypy~=1.5.1
pass_env =
    {[testenv]pass_env}
    MYPY_*
commands =
    python3 -m mypy --config-file {toxinidir}/.mypy.ini {posargs} .

[testenv:pre-commit{,-update}]
description = Static Analysis
skip_install = true
deps =
    pre-commit~=3.4.0
pass_env =
    {[testenv]pass_env}
    MYPY_*
    PRE_COMMIT_*
    RUFF_*
commands_pre =
    update: python3 -m pre_commit autoupdate
commands =
    python3 -m pre_commit run --all-files --show-diff-on-failure {posargs}

[testenv:pkg{,-push}]
description = Check Distribution Package
skip_install = true
deps =
    build
    pyroma~=4.2
    readme_renderer[md]
    twine~=4.0
commands_pre =
    python3 -m pyroma --min 10 .
    python3 -c 'from shutil import rmtree; rmtree("dist", ignore_errors=True)'
commands =
    python3 -m build
    twine check dist/*
commands_post =
    push: twine upload dist/*

[testenv:deps]
description = Pin Dependencies
skip_install = true
deps =
    pip-tools
commands =
    pip-compile --strip-extras --reuse-hashes --upgrade --output-file=constraints.txt {posargs}

[testenv:venv]
description = Setup development enviroment
package = editable
commands =
    python -c 'import sys; \
      print( "*" * 24, \
      sys.executable, \
      sys.version, "", \
      "Recreate: tox run -re {env_name}", \
      "Activate: . {envdir}/bin/activate", \
      "*" * 24, sep="\n")'
env_dir = {posargs:.venv}
